# Load modules ----

from snakemake.utils import min_version
import sys
import pandas as pd

# Logging parameters. ----
import logging
import os

from rich.console import Console
from rich.logging import RichHandler

# Logging parameters.
log = logging.getLogger(__name__)
log.setLevel(logging.INFO)

console = Console(force_terminal=True)
ch = RichHandler(show_path=False, console=console, show_time=False)
formatter = logging.Formatter('snakemake-sciseq: %(message)s')
ch.setFormatter(formatter)
log.addHandler(ch)
log.propagate = False

# Add the custom scripts directory to the path.
sys.path.insert(0, "scripts/")
from sanity_checks import sanity_barcodes, sanity_samples

# Initialization ----

# Set min. snakemake version for compatability.
min_version("7.28.0")


# Specify configuration file.
configfile: "config.yaml"


## Sanity checks of input data. ----

# Read sample metadata.
samples = pd.read_csv(config["path_samples"], sep="\t")

if not sanity_barcodes(log, config["path_barcodes"]):
    raise ValueError("Barcode file is not valid.")

if not sanity_samples(log, samples, config):
    raise ValueError("Sample metadata is not valid.")


# Constrain wildcard values to resolve downstream mixtures. ----
wildcard_constraints:
    sequencing_name="|".join([re.escape(x) for x in samples["sequencing_name"]]),
    sample_name="|".join([re.escape(x) for x in samples["sample_name"]]),
    species="|".join([re.escape(x) for x in samples["species"]]),


# Workflow output. ----


# Set working directory to output directory.
workdir: config["dir_output"]


rule DEMUX:
    input:
        lambda w: [
            "demultiplex_fastq/untrimmed/{sequencing_name}_{sample_name}_R1.fq.gz".format(
                sequencing_name=sequencing_name,
                sample_name=sample_name,
                species=species,
            )
            for sequencing_name, sample_name, species in zip(samples["sequencing_name"], samples["sample_name"], samples["species"])
        ],


# Load rules ----


include: "rules/step1_demultiplexing_fastq.smk"
